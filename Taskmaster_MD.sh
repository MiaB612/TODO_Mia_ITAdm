#!/bin/bash

# TASKMASTER - spr√°vce √∫kol≈Ø v termin√°lu

# Vytv√°≈ô√≠m soubor s √∫koly = promƒõnn√° definuje soubor
TASK_FILE="tasks.txt"

# Funkce p≈ôidat √∫kol, zkou≈°√≠m i emoji
add_task() {
    read -p "Zadej popis nov√©ho √∫kolu: " task
    if [[ -z "$task" ]]; then
        echo "‚ö†Ô∏è √ökol nem≈Ø≈æe b√Ωt pr√°zdn√Ω!"
        return
    fi

    echo "[ ] $task" >> "$TASK_FILE"
    echo "‚úÖ √ökol p≈ôid√°n." 
}

# Funkce zobraz√≠ vlo≈æen√© √∫koly
show_tasks() {
    if [[ ! -s "$TASK_FILE" ]]; then
        echo "ü§∑‚Äç‚ôÄÔ∏è ≈Ω√°dn√© √∫koly k zobrazen√≠"
        return
    fi

    echo "üìã Seznam √∫kol≈Ø:"
    echo "-----------------"

    local i=1
    while IFS= read -r line; do
        echo "$i) $line"
        ((i++))
    done < "$TASK_FILE"
}


# Funkce zobraz√≠ hlavn√≠ menu 
show_menu() {
    echo "-------------------------"
    echo " TASKMASTER - SPR√ÅVCE √öKOL≈Æ"
    echo "-------------------------"
    echo "1) Zobrazit v≈°echny √∫koly"
    echo "2) P≈ôidat nov√Ω √∫kol"
    echo "3) Oznaƒçit √∫kol jako dokonƒçen√Ω"
    echo "4) Smazat √∫kol"
    echo "5) Konec"
    echo
}

#  Funkce zobraz√≠ √∫kol jako od≈°krtnut√Ω
mark_task_done() {
    if [[ ! -s "$TASK_FILE" ]]; then
        echo "ü§∑‚Äç‚ôÄÔ∏è≈Ω√°dn√© √∫koly k oznaƒçen√≠"
        return
    fi

    show_tasks
    read -p "Zadej ƒç√≠slo √∫kolu, kter√Ω je hotov√Ω: " index

    if ! [[ "$index" =~ ^[0-9]+$ ]]; then
        echo "‚ùå Neplatn√© ƒç√≠slo."
        return
    fi

    total=$(wc -l < "$TASK_FILE")
    if (( index < 1 || index > total )); then
        echo "üö´ √ökol s t√≠mto ƒç√≠slem neexistuje."
        return
    fi

    tmp_file=$(mktemp)
    line_num=1

    while IFS= read -r line; do
        if [[ $line_num -eq $index ]]; then
            updated_line="${line/\[ \]/[x]} ‚úÖ"
            echo "$updated_line" >> "$tmp_file"
        else
            echo "$line" >> "$tmp_file"
        fi
        ((line_num++))
    done < "$TASK_FILE"

    mv "$tmp_file" "$TASK_FILE"
    echo " √ökol ƒç. $index oznaƒçen jako dokonƒçen√Ω."
}

# Funkce sma≈æe √∫kol podle ƒç√≠sla
delete_task() {
    if [[ ! -s "$TASK_FILE" ]]; then
        echo "ü§∑‚Äç‚ôÄÔ∏è ≈Ω√°dn√© √∫koly ke smaz√°n√≠."
        return
    fi

    show_tasks
    read -p "Zadej ƒç√≠slo √∫kolu, kter√Ω chce≈° smazat: " index

    if ! [[ "$index" =~ ^[0-9]+$ ]]; then
        echo "‚ùå Neplatn√© ƒç√≠slo."
        return
    fi

    total=$(wc -l < "$TASK_FILE")
    if (( index < 1 || index > total )); then
        echo "üö´ √ökol s t√≠mto ƒç√≠slem neexistuje."
        return
    fi

    tmp_file=$(mktemp)
    line_num=1

    while IFS= read -r line; do
        if [[ $line_num -ne $index ]]; then
            echo "$line" >> "$tmp_file"
        fi
        ((line_num++))
    done < "$TASK_FILE"

    mv "$tmp_file" "$TASK_FILE"
    echo "üóëÔ∏è √ökol ƒç. $index byl smaz√°n."
}

# Hlavn√≠ smyƒçka programu (vytvo≈ô√≠m funkci pro smycku)
main_loop() {
    while true; do
        show_menu
        read -p "Zadej volbu [1-5]: " choice
        case $choice in
            1) show_tasks ;;
            2) add_task ;;
            3) mark_task_done ;;
            4) delete_task ;;
            5) echo "Ukonƒçuji..."; break ;;
            *) echo "Neplatn√° volba, zkus znovu." ;;
        esac
        echo    # pr√°zdn√Ω ≈ô√°dek
    done
}

# Spu≈°tƒõn√≠ hlavn√≠ smyƒçky
main_loop



